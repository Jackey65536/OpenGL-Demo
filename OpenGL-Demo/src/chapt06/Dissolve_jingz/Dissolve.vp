#version 330
in vec4 vVertex;
in vec3 vNormal;
in vec2 vTexCoords0;

uniform mat4 mvMatrix;
uniform mat4 mvpMatrix;
uniform mat3 normalMatrix;
uniform vec3 vLightPosition;


smooth out vec2 vVaryingTexCoord;
smooth out vec3 vVaryingNormal;
smooth out vec3 vVaryingLightDir;


void main(void)
{
	vVaryingTexCoord = vTexCoords0;
	// normalMatrix 是模型在世界坐标系中的朝向矩阵
	//作用法线之后，法线就是其在世界坐标中的朝向
	vVaryingNormal = normalMatrix * vNormal;
	
	vec4 vPosition4 = mvMatrix * vVertex;
	
	vec3 vPosition3 = vPosition4.xyz/vPosition4.w;
	
	vVaryingLightDir = normalize(vLightPosition - vPosition3);
	
	gl_Position = mvpMatrix * vVertex;
	
}