#version 330

in vec4 vVertex;
in vec3 vNormal;

uniform mat4 mvMatrix;
uniform mat4 mvpMatrix;
uniform mat3 normalMatrix;
uniform vec3 vLightPosition;

smooth out float textureCoordinate;

void main(void)
{
//获得表面法线的视觉坐标
	vec3 vEyeNormal = normalMatrix * vNormal;
	
	//获得顶点的视觉坐标，即世界坐标
	vec4 vPosition4 = mvMatrix * vVertex;
	vec3 vPosition3 = vPosition4.xyz/vPosition4.w;
	
	vec3 vLightDir = normalize(vLightPosition - vPosition3);

	textureCoordinate = max(0.0f,dot(vLightDir,vEyeNormal));
	
	gl_Position = mvpMatrix * vVertex;
}