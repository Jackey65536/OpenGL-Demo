#version 330

//由OpenGL管线的上一阶段输入每个顶点的位置和法向
in vec4 vVertex;
in vec3 vNormal;

//设置每个批次的常量,每次渲染前C++代码初始化
uniform vec3 vLightPosition; 
uniform mat4 mvpMatrix;
uniform mat4 mvMatrix;
uniform mat3 normalMatrix;

smooth out vec3 vVaryingNormal;
smooth out vec3 vVaryingLightDir;
void main(void)
{
	// normalMatrix 是模型在世界坐标系中的朝向矩阵
	//作用法线之后，法线就是其在世界坐标中的朝向
	vVaryingNormal = normalMatrix * vNormal;
	//顶点相对于世界原点的位置——即世界位置；mv是摄像机（画刷）到模型的3D定位作用矩阵
	vec4 vPosition4 = mvMatrix * vVertex;
	vec3 vPosition3 = vPosition4.xyz/vPosition4.w;
	
	vVaryingLightDir = normalize(vLightPosition - vPosition3);

	gl_Position = mvpMatrix * vVertex;
}